services:
  mysql:
    image: mysql:8
    container_name: de-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: de_test
      MYSQL_USER: airflow
      MYSQL_PASSWORD: airflow
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 5s
      timeout: 5s
      retries: 30
    volumes:
      - mysql_data:/var/lib/mysql


  postgres:
    image: postgres:16-alpine
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 30
    shm_size: "1g"
    volumes:
      - postgres_db:/var/lib/postgresql/data

  airflow-init:
    image: ${AIRFLOW_IMAGE_NAME}
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./sql:/opt/airflow/sql
    command: ["bash","-c","airflow db init && airflow users create --username $${_AIRFLOW_WWW_USER_USERNAME} --password $${_AIRFLOW_WWW_USER_PASSWORD} --firstname A --lastname I --role Admin --email you@example.com || true"]

  airflow-webserver:
    image: ${AIRFLOW_IMAGE_NAME}
    container_name: airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
    ports:
      - "8081:8080"
    command: webserver
    restart: unless-stopped
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./sql:/opt/airflow/sql
      - ./requirements.txt:/opt/airflow/requirements.txt:ro

  airflow-scheduler:
    image: ${AIRFLOW_IMAGE_NAME}
    container_name: airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    command: scheduler
    restart: unless-stopped
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./sql:/opt/airflow/sql
      - ./requirements.txt:/opt/airflow/requirements.txt:ro

volumes:
  postgres_db:
  mysql_data:
